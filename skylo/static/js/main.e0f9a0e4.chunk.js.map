{"version":3,"sources":["DateRange.js","ApiCalls.js","Map.js","Slider.js","Graph.js","App.js","serviceWorker.js","index.js"],"names":["DateRange","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","checkValid","bind","assertThisInitialized","isValid","onChangeToDate","onChangeFromDate","onGoButton","data","dateExp","state","toDate","Date","fromDate","valid","setState","str","match","length","toString","date","fetchData","toISOString","react_default","a","createElement","className","es","value","moment","format","onChange","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","disabled","onClick","Component","ApiCalls","makeCall","API_URL","method","headers","params","url","type","crossDomain","cache","credentials","beforeSend","xhr","setRequestHeader","apply","toConsumableArray","$","extend","JSON","stringify","contentType","dataType","ajax","then","response","error","Current","Map","_this$props","current","style","height","width","lib_default","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","Map_Current","lat","lng","long","speed","rssi","defaultProps","Slider","addCurrent","toggleStart","slower","faster","timer","start","updateCurrent","setTimeout","self","clearTimeout","Math","round","left","Graph","color","i","floor","random","dataKey","getRandomColor","title","LineChart","margin","top","right","bottom","Line","connectNulls","stroke","dot","r","YAxis","App","processData","id","lags","longs","noData","isNaN","previousSpeed","acceleration","push","max","min","_this2","devices","src_DateRange","src_Graph","assign","src_Map","src_Slider","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0f9a0e4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment';\n\nclass DateRange extends Component{\n    constructor(props) {\n        super(props);\n\n        this.checkValid = this.checkValid.bind(this);\n        this.isValid = this.isValid.bind(this);\n        this.onChangeToDate = this.onChangeToDate.bind(this);\n        this.onChangeFromDate = this.onChangeFromDate.bind(this);\n        this.onGoButton = this.onGoButton.bind(this);\n\n        this.data = {\n            dateExp: /^(\\d{2}:\\d{2}:\\d{2}) (\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})$/\n        };\n\n        this.state = {\n            toDate: new Date(),\n            fromDate: new Date(),\n            valid: false\n        };\n    }\n\n    checkValid(){\n        let valid = this.isValid();\n\n        if(valid !== this.state.valid){\n            this.setState({\n                valid: valid\n            });\n        }\n    }\n\n    getDate(str){\n        if(str) {\n            let match = str.match(this.data.dateExp);\n\n            if(match && match.length === 5){\n                return new Date(match[4] + '-' + match[3] + '-' + match[2] + ' ' + match[1]);\n            }\n        }\n\n        return false;\n    }\n\n    isValid(){\n        if(!this.state.fromDate || !this.state.toDate){\n            return false;\n        }\n\n        if(this.state.fromDate.toString() === 'Invalid Date' || this.state.toDate.toString() === 'Invalid Date'){\n            return false;\n        }\n\n        return true;\n    }\n\n    onChangeToDate(date){\n        this.setState({\n            toDate: new Date(date)\n        }, this.checkValid);\n    }\n\n    onChangeFromDate(date){\n        this.setState({\n            fromDate: new Date(date)\n        }, this.checkValid);\n    }\n\n    onGoButton() {\n        if(this.state.valid) {\n            this.props.fetchData({\n                toDate: this.state.toDate.toISOString(),\n                fromDate: this.state.fromDate.toISOString()\n            });\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"date-range\">\n                <div className=\"to-date-container\">\n                    <label className=\"to-date\">To</label>\n                    <DatePicker\n                        value={moment(this.state.toDate).format(\"HH:mm:ss MM/DD/YYYY\")}\n                        onChange={this.onChangeToDate}\n                        showTimeSelect\n                        timeFormat=\"HH:mm:ss\"\n                        timeIntervals={5}\n                        dateFormat=\"HH:mm:ss MM/dd/yyyy\"\n                        timeCaption=\"time\"\n                    />\n                    <br />\n                    <div className=\"helptext\">(HH:mm:ss MM/DD/YYYY)</div>\n                </div>\n                <div className=\"from-date-container\">\n                    <label className=\"from-date\">From</label>\n                    <DatePicker\n                        value={moment(this.state.fromDate).format(\"HH:mm:ss MM/DD/YYYY\")}\n                        onChange={this.onChangeFromDate}\n                        showTimeSelect\n                        timeFormat=\"HH:mm:ss\"\n                        timeIntervals={5}\n                        dateFormat=\"HH:mm:ss MM/dd/yyyy\"\n                        timeCaption=\"time\"\n                    />\n                    <br />\n                    <div className=\"helptext\">(HH:mm:ss MM/DD/YYYY)</div>\n                </div>\n                <button className=\"go-button\" disabled={!this.state.valid} onClick={this.onGoButton}>Go</button>\n            </div>\n        );\n    }\n}\n\nexport default DateRange;","import $ from 'jquery';\n\nconst ApiCalls = {\n    makeCall: function (API_URL, method, headers, data) {\n        let params = {\n            url: API_URL,\n            type: method || \"GET\",\n            crossDomain: true,\n            cache: false,\n            credentials: true\n        };\n\n        if(headers){\n            params.beforeSend = function(xhr){\n                xhr.setRequestHeader(...headers);\n            };\n        }\n\n        if (method === 'POST' && data) {\n            $.extend(params, {\n                data: JSON.stringify(data),\n                contentType: \"application/json\",\n                dataType: \"json\"\n            });\n        }\n\n        return $.ajax(params).then(response => {\n            return response;\n        }, error => {\n            return false;\n        });\n    }\n};\n\nexport default ApiCalls;","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nconst Current = () => <div className=\"dot\"></div>;\n\nclass Map extends Component {\n    static defaultProps = {\n        center: {\n            lat: 59.95,\n            lng: 30.33\n        },\n        zoom: 11\n    };\n\n    render() {\n        const { current, data } = this.props;\n\n        return data && data.length ? (\n            <div className=\"map-container\" style={{ height: '600px', width: '600px' }}>\n                <GoogleMapReact\n                    bootstrapURLKeys={{ key: \"AIzaSyB7VapGG60Ch5j7T3jbrlFUvpJRofu2Wak\" }}\n                    defaultCenter={this.props.center}\n                    defaultZoom={this.props.zoom}\n                >\n                    <Current\n                        lat={data[current].lat}\n                        lng={data[current].long}\n                    />\n                </GoogleMapReact>\n                <div className=\"info\">\n                    <div className=\"speed\">{data[current].speed} mph</div>\n                    <div className=\"signal\">\n                        <div className={'signal-bar bar-1' + (data[current].rssi > 0 ? ' red' : '')}></div>\n                        <div className={'signal-bar bar-2' + (data[current].rssi > 1 ? ' red' : '')}></div>\n                        <div className={'signal-bar bar-3' + (data[current].rssi > 2 ? ' red' : '')}></div>\n                        <div className={'signal-bar bar-4' + (data[current].rssi > 3 ? ' red' : '')}></div>\n                    </div>\n                </div>\n            </div>\n        ) : false;\n    }\n}\n\nexport default Map;","import React, {Component} from 'react';\n\nclass Slider extends Component {\n    constructor(props) {\n        super(props);\n\n        this.addCurrent = this.addCurrent.bind(this);\n        this.toggleStart = this.toggleStart.bind(this);\n        this.slower = this.slower.bind(this);\n        this.faster = this.faster.bind(this);\n\n        this.data = {\n            width: props.width || 600,\n            timer: false\n        };\n\n        this.state = {\n            start: false,\n            speed: 100\n        };\n    }\n\n    addCurrent(){\n        if(this.state.start && this.props.current < this.props.data.length - 1){\n            this.props.updateCurrent(this.props.current + 1);\n            this.data.timer = setTimeout(this.addCurrent, this.state.speed);\n        }else{\n            this.setState({\n                start: false\n            });\n        }\n    }\n\n    toggleStart(){\n        let start = !this.state.start,\n            self = this;\n\n        this.setState({\n            start: start\n        }, () => {\n            clearTimeout(self.data.timer);\n\n            if (start) {\n                self.addCurrent();\n            }\n        });\n    }\n\n    slower(){\n        this.setState({\n            speed: Math.round(this.state.speed * 2)\n        });\n    }\n\n    faster(){\n        this.setState({\n            speed: Math.round(this.state.speed / 2)\n        });\n    }\n\n    render(){\n        const { current, data } = this.props;\n\n        let left = current * this.data.width / (data.length || 1);\n\n        return data && data.length ? (\n            <div className=\"slider-container current-line-container\">\n                <div className=\"current-line\" style={{left: left}}></div>\n                <div className=\"status-bar\" style={{width: this.data.width}}></div>\n                <div className=\"controller-buttons\">\n                    <span className=\"arrow left-arrow\" onClick={this.slower}><div></div><div></div></span>\n                    <span className={\"start-pause \" + (this.state.start ? 'pause' : 'start')} onClick={this.toggleStart}><div className=\"start\"></div><div></div></span>\n                    <span className=\"arrow right-arrow\" onClick={this.faster}><div></div><div></div></span>\n                </div>\n            </div>\n        ) : false;\n    }\n}\n\nexport default Slider;","import React, {Component} from 'react';\nimport {\n    LineChart,\n    Line,\n    YAxis\n    } from 'recharts';\n\nclass Graph extends Component {\n    getRandomColor() {\n        var letters = '0123456789ABCDEF';\n        var color = '#';\n        for (var i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * 16)];\n        }\n        return color;\n    }\n\n    render(){\n        const { current, data, dataKey } = this.props;\n\n        let offset = 60,\n            width = this.props.width || 400,\n            left = current * (width - offset) / (data.length || 1) + offset,\n            color = this.props.color || this.getRandomColor();\n\n        return data && data.length ? (\n            <div className=\"graph-container current-line-container\">\n                <div className=\"title\">{this.props.title}</div>\n                <div className=\"current-line\" style={{left: left}}></div>\n                <LineChart width={width} height={200} data={data} margin={{ top: 20, right: 0, bottom: 5, left: 0 }}>\n                    <Line type=\"monotone\" connectNulls={true} dataKey={dataKey} stroke={color} key={dataKey} dot={{r:0}} />\n                    <YAxis />\n                </LineChart>\n            </div>\n        ) : false;\n    }\n}\n\nexport default Graph;","import React, { Component } from 'react';\nimport DateRange from './DateRange';\nimport ApiCalls from './ApiCalls';\nimport Map from './Map';\nimport Slider from './Slider';\nimport Graph from './Graph';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n\n        this.processData = this.processData.bind(this);\n        this.updateCurrent = this.updateCurrent.bind(this);\n        this.fetchData = this.fetchData.bind(this);\n\n        this.data = {\n            id: 'dd7295fa-6c65-484d-b38d-30df3bc31c0c',\n            lags: [],\n            longs: []\n        };\n\n        this.state = {\n            current: 0,\n            data: [],\n            noData: false,\n            center: {\n                lat: 59.95,\n                lng: 30.33\n            }\n        };\n    }\n\n    updateCurrent(current){\n        if(!isNaN(current)){\n            this.setState({\n                current: current\n            })\n        }\n    }\n\n    processData(data){\n        if(data && data.length){\n            for (let i = 0; i < data.length; i++){\n                let previousSpeed = data[i - 1] ? data[i - 1].speed : 0,\n                    acceleration = data[i].speed - previousSpeed;\n\n                data[i].acceleration = acceleration;\n                this.data.lags.push(data[i].lat);\n                this.data.longs.push(data[i].long);\n            }\n\n            this.setState({\n                center: {\n                    lat: (Math.max(...this.data.lags) + Math.min(...this.data.lags)) / 2,\n                    lng: (Math.max(...this.data.longs) + Math.min(...this.data.longs)) / 2\n                }\n            });\n        }\n\n        return data;\n    }\n\n    fetchData(params){\n        ApiCalls.makeCall('https://alpha.skylo.io/api/devices/history/ids/' + this.data.id + '?since=' + params.fromDate + '&until=' + params.toDate, 'GET', [\n            \"Authorization\", \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRqYXlAZm9yZC5jb20iLCJzeXN0ZW1Sb2xlIjoic3lzdGVtVXNlciIsImlhdCI6MTU0MTAwNzAzMiwiaXNzIjoiaHR0cDovL3dlYi1zZXJ2ZXJzLWRldi0xNDI1MzI1MDI4LnVzLXdlc3QtMi5lbGIuYW1hem9uYXdzLmNvbSIsInN1YiI6ImUyMmE2MjlkLWRlYTAtNDc0Yi04YzY5LTFlODQwYmZkMzRmYSIsImp0aSI6IjY0Nzk2YWIwLTlhYTItNGY3Ny04OTk4LWI1MzMzYzhlMmI5OCJ9.aIGEX_qigixaA17dcO0KNJay-R_704FDaugfkIAeVLA\"\n        ]).then(response => {\n            let data = [];\n\n            if(response && response.devices && response.devices[this.data.id]){\n                data = response.devices[this.data.id];\n            }\n\n            this.setState({\n                current: 0,\n                data: this.processData(data),\n                noData: !data.length\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"header\">\n                    <div className=\"title\">Vehicle Statistics</div>\n                    <DateRange fetchData={this.fetchData}></DateRange>\n                </div>\n            { this.state.noData ? (\n                <h2>No data is returned. Please check your date range and try again!</h2>\n            ) : false }\n                <div className=\"right-content\">\n                    <Graph {...this.state} dataKey={'rssi'} color={\"#00f\"} title={'Signal'}></Graph>\n                    <Graph {...this.state} dataKey={'speed'} color={\"#0f0\"} title={'Speed'}></Graph>\n                    <Graph {...this.state} dataKey={'acceleration'} color={\"#0ff\"} title={'Acceleration'}></Graph>\n                </div>\n                <div className=\"main-content\">\n                    <Map {...this.state}></Map>\n                    <Slider {...this.state} updateCurrent={this.updateCurrent}></Slider>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}